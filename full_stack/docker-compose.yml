version: '3'
services:
  node.producer:
    build: ./node_producer
    volumes:
      - ./node_producer:/usr/src/app
    command: sh -c " npm install && npm start "
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - spu011_network
    depends_on:
      - redis.socket
      - redis.cache
    env_file:
      - .env

  rabbit.mq:
    image: rabbitmq:3.10.20-management-alpine
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      - .env
    networks:
      - spu011_network
    ports:
      - "5672:5672"
      - "15672:15672"

  notifications:
    build: ./notifications
    volumes:
      - ./notifications:/usr/src/app
    command: sh -c " npm install && npm start "
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - spu011_network
    depends_on:
      - redis.socket
      - redis.cache
    env_file:
      - .env

  db.mysql.main:
    image: 'mysql/mysql-server:latest'
    ports:
      - '3366:3306'
    env_file:
      - .env
    volumes:
      - './volumes/db/mysql/main:/var/lib/mysql'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - spu011_network


  java.api:
    build: ./java_api
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - spu011_network
    depends_on:
      - redis.cache
      - redis.socket
      - db.mysql.main
    expose:
      - "8080"
    environment:
      - NAME=Java_Api


  storage:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9009:9009"
    volumes:
      - ./volumes/storage:/data
    env_file:
      - .env
    command: server --console-address :9009 /data
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - spu011_network

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - spu011_network
    depends_on:
      - front.vue
      - socket.jonny
      - java.api
    ports:
      - "80:80"

  front.vue:
    build: ./front_vue
    volumes:
      - ./front_vue:/usr/src/app
    command: sh -c " npm install && npm start "
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - spu011_network

  redis.socket:
    image: 'redis:alpine'
    ports:
      - '6379:6379'
    volumes:
      - './volumes/redis/socket:/data'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - spu011_network

  redis.cache:
    image: 'redis:alpine'
    volumes:
      - './volumes/redis/cache:/data'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - spu011_network

  socket.jonny:
      build: ./sockets
      volumes:
        - ./sockets:/usr/src/app
      command: sh -c " npm install && npm start "
      extra_hosts:
        - 'host.docker.internal:host-gateway'
      networks:
        - spu011_network
      depends_on:
        - redis.socket
        - redis.cache
      environment:
        - NAME=Jonny
      env_file:
        - .env

  node.api:
    build: ./node_api
    volumes:
      - ./node_api:/usr/src/app
    command: sh -c " npm install && npm start "
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - spu011_network
    depends_on:
      - redis.socket
      - redis.cache
    environment:
      - NAME=NodeApi
    env_file:
      - .env



networks:
  spu011_network:
    driver: bridge

